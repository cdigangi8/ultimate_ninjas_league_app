{"version":3,"file":"static/webpack/static/development/pages/results_entry.js.b658abd02079821e1ff8.hot-update.js","sources":["webpack:///./components/Controls.js"],"sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport '../style/stopwatch.css';\nimport { Column, Row } from 'simple-flexbox';\n\nclass Controls extends Component {\n\n  // static proptTypes = {\n  //   isRunning  : PropTypes.bool,\n  //   start      : PropTypes.func.isRequired,\n  //   stop       : PropTypes.func.isRequired,\n  //   reset      : PropTypes.func.isRequired,\n  //   addLapTime : PropTypes.func.isRequired \n  // };\n\n  static defaultProps = {\n    isRunning : false,\n    choices : []\n  };\n\n  createPointRow(item){\n    let table = []\nfor (let i = 0; i < item.choices.length; i++) {\n  table.push(<div className={item.choices[i].selected == true ? \"obstacleBoxContent activeBox\" : \"obstacleBoxContent\"}>{item.choices[i].value}</div>)\n}\nreturn table\n}\n\n  render() {\n    const { isRunning, start, stop, reset, addLapTime, choices } = this.props;\n\n    return (\n      <div className=\"Controls\">\n        { !isRunning ?\n            <button\n              onClick={ start }\n              className=\"Controls__button\"\n              ref=\"startBtn\" > Start </button>\n          : null }\n\n        { isRunning ?\n          <button\n            onClick={ stop }\n            className=\"Controls__button\"\n            ref=\"stopBtn\" > Stop </button>\n        : null }\n\n        <button\n          onClick={ reset }\n          disabled={ isRunning }\n          className=\"Controls__button\"\n          ref=\"resetBtn\" > Reset </button>\n\n        <button\n          onClick={ addLapTime }\n          disabled={ !isRunning }\n          className=\"Controls__button\"\n          ref=\"lapBtn\" > Lap Time </button>\n\n          <div>\n          {this.state.choices.map((item, index) => {\n                return <div className=\"obstacleBox\">\n                  {/* <div  className=\"obstacleBoxTitle\">{item.obstacle}</div> */}\n                  <Row horizontal=\"center\">\n                  {/* {this.createPointRow(item)} */}\n                  <div className={item.selected == true ? \"obstacleBoxContent activeBox\" : \"obstacleBoxContent\"}>{item.value}</div>\n                  </Row></div>\n            })}\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Controls;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAQA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAIA;;;;AAlEA;AACA;AADA;AAWA;AACA;AAFA;AACA;AA0DA;;;;A","sourceRoot":""}