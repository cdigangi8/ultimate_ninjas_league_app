{"version":3,"file":"static/webpack/static/development/pages/index.js.c507e443327bd4d6ab7a.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport UNHeader from \"../components/header\";\nimport '../style/index.css';\nimport {getCompInfo, getCourseObstacles, postScorecard, getStandings} from '../api/api';\nimport {convertObstacles, calculateScore, resetObstacleArr,rankFunction} from '../controllers/controllers';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Column, Row } from 'simple-flexbox';\n\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faListOl, faBars, faMapMarkerAlt, faHashtag, faCalendarDay } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faListOl, faBars, faMapMarkerAlt, faHashtag, faCalendarDay);\n\n\n// const drawerWidth = 300;\n\n// const styles = theme => ({\n//   root: {\n//     display: 'flex',\n//   },\n\n//   menuButton: {\n//     marginLeft: 12,\n//     marginRight: 36,\n//   },\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//     whiteSpace: 'nowrap',\n//   },\n//   drawerOpen: {\n//     width: drawerWidth,\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   drawerClose: {\n//     transition: theme.transitions.create('width', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     overflowX: 'hidden',\n//     width: theme.spacing.unit * 7 + 1,\n//     [theme.breakpoints.up('sm')]: {\n//       width: theme.spacing.unit * 7 + 1,\n//     },\n//   },\n//   toolbar: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'flex-end',\n//     padding: '0 8px',\n//     ...theme.mixins.toolbar,\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing.unit * 3,\n//   },\n// activeListItem:{\n//     backgroundColor: \"rgba(0,90,180,0.5)\",\n//     color: \"#ffffff\"\n// }\n// });\n\nclass YlLeaderboard extends Component {\n\n\n    state = {\n        location: \"\",\n        courses: [],\n        athletes: [],\n        obstacles: [],\n        courseIndex: \"\",\n        showLocationSelect: true,\n        showCourseSelect: false,\n        showAgeSelect: false,\n        showCompetitors: false,\n        ageMin: '',\n        ageMax: '',\n        showScorecard: false,\n        currentAthlete: '',\n        currentAthleteIndex: '',\n        tiebreakerOb: \"\",\n        tieBreakMin: '',\n        tieBreakSec: '',\n        tieBreakMs: '',\n        openDialog: false,\n        resultsArr: [],\n        rankArr: [],\n        standingsView: 'season',\n        compDate: '',\n        open: true\n    };\n\n    handleDrawer = () => {\n        if(this.state.open == false){\n            this.setState({ open: true });\n        }else{\n            this.setState({ open: false });\n        }\n        \n      };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    setStandings(val){\n        this.setState({standingsView: val, location: '', showCourseSelect: false, showAgeSelect: false, showCompetitors: false, ageMin: '', ageMax: '', compDate: ''});\n    }\n\n    setLocation(val){\n        if(this.state.standingsView == 'season'){\n            this.setState({location: val, showAgeSelect: true, ageMin: '', ageMax: '', showCompetitors: false, showCourseSelect: false});\n        }else{\n            getCompInfo(val).then(resp=>{\n                this.setState({courses: resp.data.courses, athletes: resp.data.athletes, location: val, showLocationSelect: false, showCourseSelect: true, showAgeSelect: false, showCompetitors: false, compDate: ''});\n            })\n        }\n    }\n\n    setCourse(ind){\n        this.setState({courseIndex: ind, showAgeSelect: true, compDate: this.state.courses[ind].comp_date.split(\"T\")[0], ageMin: '', ageMax: '', showCompetitors: false});\n        getCourseObstacles(this.state.courses[ind].course_id).then(resp=>{\n            convertObstacles(resp.data.obstacles).then(resp2=>{\n                    this.setState({obstacles: resp2, resultsArr: resp.data.results});\n            });\n        });\n    }\n\n    setAgeGroup(min,max){\n        this.setState({ageMin: min, ageMax: max, showCompetitors: true});\n        if(this.state.standingsView == 'season'){\n            getStandings(min, max, this.state.location).then(resp=>{\n                this.setState({rankArr: resp.data.standings});\n            });\n        }else{\n            rankFunction(this.state.resultsArr, this.state.athletes, min, max).then(resp=>{\n                console.log(resp);\n                this.setState({rankArr: resp.array});\n            });\n        }\n    }\n\n    goBack(){\n        if(this.state.showScorecard == true){\n            resetObstacleArr(this.state.obstacles).then(resp=>{\n                this.setState({showScorecard: false, showCompetitors: true, currentAthlete: '', showAgeSelect: true, obstacles: resp})\n            });\n        }else if(this.state.showCompetitors == true || this.state.showAgeSelect == true){\n            this.setState({showCompetitors: false, ageMin: '', ageMax: '', showAgeSelect: false, showCourseSelect: true, obstacles: [], resultsArr: [] });\n        }else{\n            this.setState({showCourseSelect: false,  courseIndex: '', courses: [], athletes: [], location: '', showLocationSelect: true});\n        }\n    }\n\n    componentDidMount(){\n        console.log(this);\n    }\n\n    render(){\n        // const { classes, theme } = this.props;\n\n    return <div className=\"mainBack\">\n        <UNHeader title='Youth League Results' link='' linkTitle=''></UNHeader>\n\n        <Row style={{height: \"100vh\", overflow: \"auto\"}}>\n        {/* <div id=\"drawer-container\" style={{position: \"relative\"}}>\n        <CssBaseline />\n        <Drawer\n          variant=\"permanent\"\n          PaperProps={{ style: { position: 'absolute' } }}\n          ModalProps={{\n            style: { position: 'absolute'}\n          }}\n          className={classNames(classes.drawer, {\n            [classes.drawerOpen]: this.state.open,\n            [classes.drawerClose]: !this.state.open,\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerOpen]: this.state.open,\n              [classes.drawerClose]: !this.state.open,\n            }),\n          }}\n          open={this.state.open}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={this.handleDrawer}>\n            <FontAwesomeIcon icon=\"bars\"/>\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            <ListItem>\n                <ListItemIcon><FontAwesomeIcon icon=\"list-ol\"/></ListItemIcon>\n                <ListItemText>Standings</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setStandings('season')} className={this.state.standingsView == 'season' ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 15px\"}}>S</ListItemIcon>\n                <ListItemText>Season Standings</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setStandings('individual')} className={this.state.standingsView == 'individual' ? classes.activeListItem : null}>\n                <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 15px\"}}>I</ListItemIcon>\n                <ListItemText>Individual Competition</ListItemText>\n            </ListItem>\n          </List>\n          <Divider />\n          <List>\n            <ListItem>\n                <ListItemIcon><FontAwesomeIcon icon=\"map-marker-alt\"/></ListItemIcon>\n                <ListItemText>Location</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setLocation(1)} className={this.state.location == '1' ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>C</ListItemIcon>\n                <ListItemText>Chicago</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setLocation(2)} className={this.state.location == '2' ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>N</ListItemIcon>\n                <ListItemText>Naperville</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setLocation(3)} className={this.state.location == '3' ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>L</ListItemIcon>\n                <ListItemText>Libertyville</ListItemText>\n            </ListItem>\n          </List>\n          <Divider />\n          {this.state.showCourseSelect == true ?\n            <List>\n                <ListItem>\n                    <ListItemIcon><FontAwesomeIcon icon=\"calendar-day\"/></ListItemIcon>\n                    <ListItemText>Competition Date</ListItemText>\n                </ListItem>\n                {this.state.courses.map((item, index) => (\n                <ListItem button onClick={e=>this.setCourse(index)} className={this.state.compDate == item.comp_date.split(\"T\")[0] ? classes.activeListItem : null}>\n                    <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>{index + 1}</ListItemIcon>\n                    <ListItemText>{item.comp_date.split(\"T\")[0]}</ListItemText>\n                </ListItem>\n                ))}\n            </List>\n          :null}\n          <Divider />\n          {this.state.showAgeSelect == true ?\n            <List>\n            <ListItem>\n                <ListItemIcon><FontAwesomeIcon icon=\"hashtag\"/></ListItemIcon>\n                <ListItemText>Age Group</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(6,8)} className={this.state.ageMax == 8 ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>1</ListItemIcon>\n                <ListItemText>Ages 6-8</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(9,10)} className={this.state.ageMax == 10 ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>2</ListItemIcon>\n                <ListItemText>Ages 9-10</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(11,12)} className={this.state.ageMax == 12 ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>3</ListItemIcon>\n                <ListItemText>Ages 11-12</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(13,16)} className={this.state.ageMax == 16 ? classes.activeListItem : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>4</ListItemIcon>\n                <ListItemText>Ages 13-16</ListItemText>\n            </ListItem>\n          </List>\n          :null}\n        </Drawer>\n        </div> */}\n\n\n<div id=\"drawer-container\" style={{position: \"relative\"}}>\n        <CssBaseline />\n        {/* <Drawer\n          variant=\"permanent\"\n          PaperProps={{ style: { position: 'absolute' } }}\n          ModalProps={{\n            style: { position: 'absolute'}\n          }}\n          className={classNames('drawer', {\n            'drawerOpen': this.state.open,\n            'drawerClose': !this.state.open,\n          })}\n          classes={{\n            paper: classNames({\n                'drawerOpen': this.state.open,\n              'drawerClose': !this.state.open,\n            }),\n          }}\n          open={this.state.open}\n        > */}\n        <div\n          className={classNames('drawer', {\n            'drawerOpen': this.state.open,\n            'drawerClose': !this.state.open,\n          })}\n          classes={{\n            paper: classNames({\n                'drawerOpen': this.state.open,\n              'drawerClose': !this.state.open,\n            }),\n          }}\n          open={this.state.open}\n        >\n          <div className='toolbar'>\n          <span className=\"toolbarBtn\">\n            <FontAwesomeIcon onClick={this.handleDrawer} icon=\"bars\"/>\n            </span>\n            <span style={{marginLeft: \"20px\", fontWeight: \"bold\"}}>Options</span>\n          </div>\n          <Column className=\"optionSection\">\n          <Row vertical=\"center\" className=\"titleRow\">\n                <div className=\"titleIcon\"><FontAwesomeIcon icon=\"list-ol\"/></div>\n                <div className=\"titleText\">Standings</div>\n            </Row>\n            <Row vertical=\"center\" onClick={e=>this.setStandings('season')} className={this.state.standingsView == 'season' ? 'activeListItem optionRow' : 'optionRow'}>\n                <div className=\"optionLetterIcon\">S</div>\n                <div className=\"optionText\">Season Standings</div>\n            </Row>\n            <Row vertical=\"center\" onClick={e=>this.setStandings('individual')} className={this.state.standingsView == 'individual' ? 'activeListItem optionRow' : 'optionRow'}>\n                <div className=\"optionLetterIcon\">I</div>\n                <div className=\"optionText\">Individual Competition</div>\n            </Row>\n            </Column>\n          {/* <List>\n            <ListItem>\n                <ListItemIcon><FontAwesomeIcon icon=\"list-ol\"/></ListItemIcon>\n                <ListItemText>Standings</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setStandings('season')} className={this.state.standingsView == 'season' ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 15px\"}}>S</ListItemIcon>\n                <ListItemText>Season Standings</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setStandings('individual')} className={this.state.standingsView == 'individual' ? 'activeListItem' : null}>\n                <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 15px\"}}>I</ListItemIcon>\n                <ListItemText>Individual Competition</ListItemText>\n            </ListItem>\n          </List> */}\n\n            <Column className=\"optionSection\">\n                <Row vertical=\"center\" className=\"titleRow\">\n                        <div className=\"titleIcon\"><FontAwesomeIcon icon=\"map-marker-alt\"/></div>\n                        <div className=\"titleText\">Location</div>\n                    </Row>\n                    <Row vertical=\"center\" onClick={e=>this.setLocation(1)} className={this.state.location == '1' ? 'activeListItem optionRow' : 'optionRow'}>\n                        <div className=\"optionLetterIcon\">C</div>\n                        <div className=\"optionText\">Chicago</div>\n                    </Row>\n                    <Row vertical=\"center\" onClick={e=>this.setLocation(2)} className={this.state.location == '2' ? 'activeListItem optionRow' : 'optionRow'}>\n                        <div className=\"optionLetterIcon\">N</div>\n                        <div className=\"optionText\">Naperville</div>\n                    </Row>\n                    <Row vertical=\"center\" onClick={e=>this.setLocation(3)} className={this.state.location == '3' ? 'activeListItem optionRow' : 'optionRow'}>\n                        <div className=\"optionLetterIcon\">L</div>\n                        <div className=\"optionText\">Libertyville</div>\n                    </Row>\n                </Column>\n          {/* <List>\n            <ListItem>\n                <ListItemIcon><FontAwesomeIcon icon=\"map-marker-alt\"/></ListItemIcon>\n                <ListItemText>Location</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setLocation(1)} className={this.state.location == '1' ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>C</ListItemIcon>\n                <ListItemText>Chicago</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setLocation(2)} className={this.state.location == '2' ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>N</ListItemIcon>\n                <ListItemText>Naperville</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setLocation(3)} className={this.state.location == '3' ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>L</ListItemIcon>\n                <ListItemText>Libertyville</ListItemText>\n            </ListItem>\n          </List>\n          <Divider /> */}\n          {this.state.showCourseSelect == true ?\n            <Column className=\"optionSection\">\n            <Row vertical=\"center\" className=\"titleRow\">\n                    <div className=\"titleIcon\"><FontAwesomeIcon icon=\"calendar-day\"/></div>\n                    <div className=\"titleText\">Competition Date</div>\n                </Row>\n                {this.state.courses.map((item, index) => (\n                    <Row vertical=\"center\" onClick={e=>this.setCourse(index)} className={this.state.compDate == item.comp_date.split(\"T\")[0] ? 'activeListItem optionRow' : 'optionRow'}>\n                        <div className=\"optionLetterIcon\">{index + 1}</div>\n                        <div className=\"optionText\">{item.comp_date.split(\"T\")[0]}</div>\n                    </Row>\n                ))}\n            </Column>\n        //     <List>\n        //         <ListItem>\n        //             <ListItemIcon><FontAwesomeIcon icon=\"calendar-day\"/></ListItemIcon>\n        //             <ListItemText>Competition Date</ListItemText>\n        //         </ListItem>\n        //         {this.state.courses.map((item, index) => (\n        //         <ListItem button onClick={e=>this.setCourse(index)} className={this.state.compDate == item.comp_date.split(\"T\")[0] ? 'activeListItem' : null}>\n        //             <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>{index + 1}</ListItemIcon>\n        //             <ListItemText>{item.comp_date.split(\"T\")[0]}</ListItemText>\n        //         </ListItem>\n        //         ))}\n        //     </List>\n          :null}\n           {/* <Divider /> */}\n          {this.state.showAgeSelect == true ?\n            <List>\n            <ListItem>\n                <ListItemIcon><FontAwesomeIcon icon=\"hashtag\"/></ListItemIcon>\n                <ListItemText>Age Group</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(6,8)} className={this.state.ageMax == 8 ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>1</ListItemIcon>\n                <ListItemText>Ages 6-8</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(9,10)} className={this.state.ageMax == 10 ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>2</ListItemIcon>\n                <ListItemText>Ages 9-10</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(11,12)} className={this.state.ageMax == 12 ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>3</ListItemIcon>\n                <ListItemText>Ages 11-12</ListItemText>\n            </ListItem>\n            <ListItem button onClick={e=>this.setAgeGroup(13,16)} className={this.state.ageMax == 16 ? 'activeListItem' : null}>\n            <ListItemIcon align=\"middle\" style={{marginLeft: \"10px\", backgroundColor: \"rgb(230,230,230)\", height: \"35px\", width: \"35px\", borderRadius: \"50%\", padding: \"8px 12px\"}}>4</ListItemIcon>\n                <ListItemText>Ages 13-16</ListItemText>\n            </ListItem>\n          </List>\n          :null}\n        </div>\n        </div>\n\n\n                    <div className=\"pageContainer\">\n                    {/* <div>\n                    <Row horizontal=\"start\" wrap style={{marginTop: \"10px\"}}>\n                            <div className={this.state.standingsView == 'season' ? \"choiceBox activeBox\" : \"choiceBox\"} style={{margin: '5px'}} onClick={e=>this.setStandings('season')}>Season Standings</div>\n                            <div className={this.state.standingsView == 'individual' ? \"choiceBox activeBox\" : \"choiceBox\"} style={{margin: '5px'}} onClick={e=>this.setStandings('individual')}>Individual Competitions</div>\n                        </Row>\n                    </div> */}\n                    {/* <div>\n                        <div className=\"subTitle\" style={{color: \"#ffffff\"}}>Please Select Your Location</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                            <div className={this.state.location == '1' ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setLocation(1)}>Chicago</div>\n                            <div className={this.state.location == '2' ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setLocation(2)}>Naperville</div>\n                            <div className={this.state.location == '3' ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setLocation(3)}>Libertyville</div>\n                        </Row></div> */}\n                        {/* {this.state.showCourseSelect == true ?\n                        <div>\n                        <div className=\"subTitle\" style={{color: \"#ffffff\"}}>Please Select Your Competition Date</div>\n                        <Row horizontal=\"start\" wrap style={{marginTop: \"20px\"}}>\n                            {this.state.courses.map((item, index) => (\n                                <div className={this.state.compDate == item.comp_date.split(\"T\")[0] ? \"choiceBox activeBox\" : \"choiceBox\"} style={{margin: \"5px\"}} onClick={e=>this.setCourse(index)}>{item.comp_date.split(\"T\")[0]}</div>\n                            ))}\n                        </Row> </div>: null} */}\n{/* \n                        {this.state.showAgeSelect == true ?\n                        <div>\n                        <div className=\"subTitle\" style={{color: \"#ffffff\"}}>Please Select an Age Group</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        <div className={this.state.ageMax == 8 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(6,8)}>Ages 6-8</div>\n                        <div className={this.state.ageMax == 10 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(9,10)}>Ages 9-10</div>\n                        <div className={this.state.ageMax == 12 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(11,12)}>Ages 11-12</div>\n                        <div className={this.state.ageMax == 16 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(13,16)}>Ages 13-16</div>\n                        </Row> </div>: null} */}\n\n                        {this.state.showCompetitors == true && this.state.standingsView == 'individual' ?\n                        <div>\n                        <div className=\"subTitle\" style={{color: \"#ffffff\"}}>Results</div>\n                        <Column horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        {this.state.rankArr.map((item, index) => {\n                            if(item.age >= this.state.ageMin && item.age < this.state.ageMax+1){\n                                // return <div className={item.completed == true ? \"athleteBox completed\" : \"athleteBox\"}>\n                                return <div className=\"athleteBox\">\n                                    <Row horizontal='space-around' vertical='center'>\n                                        <div>{item.rank}.</div>\n                                        <div>{item.first_name + ' ' + item.last_name.substring(0,1)}</div>\n                                        <div><div>{item.points}</div><div style={{fontSize: \".8em\", color: \"#979797\"}}>Pts.</div></div>\n                                    </Row>\n                                </div>\n                            }\n                        })}\n                        </Column> </div>: null}\n\n                        {this.state.showCompetitors == true && this.state.standingsView == 'season' ?\n                        <div>\n                        <div className=\"subTitle\" style={{color: \"#ffffff\"}}>Standings</div>\n                        <Column horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        {this.state.rankArr.map((item, index) => {\n                                return <div className=\"athleteBox\">\n                                    <Row horizontal='space-around' vertical='center'>\n                                        <div>{index + 1}.</div>\n                                        <div>{item.first_name + ' ' + item.last_name.substring(0,1)}</div>\n                                        <div><div>{item.Points}</div><div style={{fontSize: \".8em\", color: \"#979797\"}}>Pts.</div></div>\n                                    </Row>\n                                </div>\n                        })}\n                        </Column> </div>: null}\n                        \n                    </div>\n\n                    \n\n                </Row>\n\n\n                \n\n        \n    </div>;\n    }\n  }\n  \n\n//   YlLeaderboard.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//     theme: PropTypes.object.isRequired,\n//   };\n\n//   export default withStyles(styles, { withTheme: true })(YlLeaderboard);\nexport default YlLeaderboard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AACA;AA0BA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAJA;AACA;;;;;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAwGA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AADA;AAMA;AAXA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAkBA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAuBA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA8BA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAmCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAcA;;;;AA7bA;AAkcA;AACA;AACA;AAEA;AACA;AACA;AADA;;;;A","sourceRoot":""}