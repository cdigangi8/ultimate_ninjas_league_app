{"version":3,"file":"static/webpack/static/development/pages/results_entry.js.23a0cf4d964897d848f4.hot-update.js","sources":["webpack:///./pages/results_entry.js"],"sourcesContent":["import React, { Component } from 'react';\nimport UNHeader from \"../components/header\";\nimport '../style/results_entry.css';\nimport {getCompInfo, getCourseObstacles, postScorecard} from '../api/api';\nimport {convertObstacles, calculateScore, resetObstacleArr,rankFunction} from '../controllers/controllers';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Column, Row } from 'simple-flexbox';\nimport {addCompetitor} from '../api/api';\n\nclass ResultsEntry extends Component {\n\n\n    state = {\n        location: \"\",\n        courses: [],\n        athletes: [],\n        obstacles: [],\n        courseIndex: \"\",\n        showLocationSelect: true,\n        showCourseSelect: false,\n        showAgeSelect: false,\n        showCompetitors: false,\n        ageMin: '',\n        ageMax: '',\n        showScorecard: false,\n        currentAthlete: '',\n        currentAthleteIndex: '',\n        tiebreakerOb: \"\",\n        tieBreakMin: '',\n        tieBreakSec: '',\n        tieBreakMs: '',\n        openDialog: false,\n        resultsArr: [],\n        rankArr: []\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    setLocation(val){\n        this.setState({location: val, showLocationSelect: false, showCourseSelect: true});\n        getCompInfo(val).then(resp=>{\n            this.setState({courses: resp.data.courses, athletes: resp.data.athletes});\n        })\n    }\n\n    setCourse(ind){\n        this.setState({courseIndex: ind, showCourseSelect: false, showAgeSelect: true});\n        getCourseObstacles(this.state.courses[ind].course_id).then(resp=>{\n            convertObstacles(resp.data.obstacles).then(resp2=>{\n                    this.setState({obstacles: resp2, resultsArr: resp.data.results});\n            })\n            \n        });\n    }\n\n    setAgeGroup(min,max){\n        this.setState({ageMin: min, ageMax: max, showCompetitors: true});\n        rankFunction(this.state.resultsArr, this.state.athletes, min, max).then(resp=>{\n            console.log(resp);\n            this.setState({rankArr: resp});\n        })\n    }\n\n    setScorecard(athlete){\n        var elementPos = this.state.rankArr.map(function(x) {return x.athlete_id; }).indexOf(athlete);\n        this.setState({currentAthleteIndex: elementPos,currentAthlete: athlete, showCompetitors: false, showAgeSelect: false, showScorecard: true})\n    }\n\n    createPointRow(item){\n        let table = []\n\n    for (let i = 0; i < item.choices.length; i++) {\n      table.push(<div className={item.choices[i].selected == true ? \"obstacleBoxContent activeBox\" : \"obstacleBoxContent\"} onClick={e=>this.addPoints(item, item.choices[i].key)}>{item.choices[i].value}</div>)\n    }\n    return table\n    }\n\n    checkTie(){\n        var tie = false;\n        var tieOB;\n        this.state.obstacles.forEach((item,index)=>{\n            for(var i=0; i<item.choices.length; i++){\n                if(tie==false && i !== (item.choices.length-1) && item.choices[i].selected == true){\n                    tie = true;\n                    tieOB = item.obOrder;\n                    this.setState({tiebreakerOb: tieOB});\n                }\n            }\n            if(tie == false){\n                this.setState({tiebreakerOb: \"\"});\n            }\n        });\n    }\n\n    convertTime(min, sec, ms){\n        if(min < 10){\n            min = '0' + min;\n        }\n        if(sec < 10){\n            sec = '0' + sec;\n        }\n        if(ms < 10){\n            ms = '0' + ms;\n        }\n        return '00' + ':' + min + ':' + sec + '.' + ms;\n      }\n\n    addPoints(item, c_id){\n        for(var i=0; i<item.choices.length;i++){\n            if(item.choices[i].key != c_id){\n                item.choices[i].selected = false;\n            }else{\n                item.choices[i].selected = true;\n                this.checkTie();\n            }\n        }\n        this.setState({obstacles: this.state.obstacles});\n    }\n\n    confirmSubmission(){\n        this.setState({openDialog: true});\n    }\n\n    submitScorecard(){\n        var tiebreakTime = this.convertTime(this.state.tieBreakMin, this.state.tieBreakSec, this.state.tieBreakMs);\n        console.log(tiebreakTime);\n        calculateScore(this.state.obstacles).then(resp=>{\n            var points = resp.score;\n            var resultString = resp.resStr;\n            postScorecard(this.state.currentAthlete, this.state.courses[this.state.courseIndex].course_id, points, this.state.tiebreakerOb, tiebreakTime, resultString).then(resp2=>{\n                console.log(resp2);\n                resetObstacleArr(this.state.obstacles).then(resp3=>{\n                    rankFunction(resp2.data.results, this.state.athletes).then(resp4=>{\n                        this.setState({showScorecard: false, showCompetitors: true, currentAthlete: '', openDialog: false, showAgeSelect: true, \n                                tieBreakMin: '', tieBreakSec: '', tieBreakMs: '', tiebreakerOb: '', obstacles: resp3, rankArr: resp4});\n                    })\n                })\n            });\n        });\n    }\n\n    closeDialog = (type) =>{\n        this.setState({ openDialog: false });\n}\n\n\n    componentDidMount(){\n        console.log(this);\n    }\n\n    render(){\n    return <div className=\"resultsEntry\">\n        <UNHeader title='Youth League Results' link='' linkTitle=''></UNHeader>\n\n        <Row>\n                    <div className=\"pageContainer\">\n                    {this.state.showLocationSelect == true ?\n                    <div>\n                        <div className=\"subTitle\">Please Select Your Location</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                            <div className=\"choiceBox\" onClick={e=>this.setLocation(1)}>Chicago</div>\n                            <div className=\"choiceBox\" onClick={e=>this.setLocation(2)}>Naperville</div>\n                            <div className=\"choiceBox\" onClick={e=>this.setLocation(3)}>Libertyville</div>\n                        </Row></div> : null}\n                        {this.state.showCourseSelect == true ?\n                        <div>\n                        <div className=\"subTitle\">Please Select Your Competition Date</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                            {this.state.courses.map((item, index) => (\n                                <div className=\"choiceBox\" onClick={e=>this.setCourse(index)}>{item.comp_date.split(\"T\")[0]}</div>\n                            ))}\n                        </Row> </div>: null}\n\n                        {this.state.showAgeSelect == true ?\n                        <div>\n                        <div className=\"subTitle\">Please Select an Age Group</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        <div className={this.state.ageMax == 8 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(6,8)}>Ages 6-8</div>\n                        <div className={this.state.ageMax == 10 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(9,10)}>Ages 9-10</div>\n                        <div className={this.state.ageMax == 12 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(11,12)}>Ages 11-12</div>\n                        <div className={this.state.ageMax == 16 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(13,16)}>Ages 13-16</div>\n                        </Row> </div>: null}\n\n                        {this.state.showCompetitors == true ?\n                        <div>\n                        <div className=\"subTitle\">Ninjas</div>\n                        <Column horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        {this.state.rankArr.map((item, index) => {\n                            if(item.age >= this.state.ageMin && item.age < this.state.ageMax+1){\n                                return <div className=\"athleteBox completed\" onClick={e=>this.setScorecard(item.athlete_id)}>\n                                    <Row horizontal='space-around' vertical='center'>\n                                        <div>1.</div>\n                                        <div>{item.first_name + ' ' + item.last_name}</div>\n                                        <div><div>29</div><div style={{fontSize: \".8em\", color: \"#979797\"}}>Pts.</div></div>\n                                    </Row>\n                                </div>\n                            }\n                        })}\n                        </Column> </div>: null}\n\n                        {this.state.showScorecard == true ?\n                        <div>\n                        <div className=\"subTitle\">Scorecard</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                            <div>\n                                <div>Name:</div>\n                                <div className=\"scName\">{this.state.rankArr[this.state.currentAthleteIndex].first_name + ' ' + this.state.rankArr[this.state.currentAthleteIndex].last_name}</div>\n                            </div>\n                        </Row>\n                        <Column horizontal=\"center\">\n                        {this.state.obstacles.map((item, index) => {\n                            return <div className=\"obstacleBox\">\n                            <div  className=\"obstacleBoxTitle\">{item.obstacle}</div>\n                            <Row horizontal=\"center\">\n                                {this.createPointRow(item)}\n                            </Row></div>\n                            })}\n                        </Column> \n                        <Row horizontal=\"center\" style={{marginTop: \"20px\"}}>\n                        <div style={{marginRight: \"30px\"}}>\n                                <div>Tiebreaker Obstacle</div>\n                                <div align=\"middle\" style={{fontSize: \"18px\", fontWeight: \"bold\", marginTop: \"10px\"}}>{this.state.tiebreakerOb}</div>\n                            </div>\n                            <div>\n                                <div>Tiebreaker Time</div>\n                                <div style={{marginTop: \"10px\"}}>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"min\" value={this.state.tieBreakMin} onChange={this.handleChange('tieBreakMin')}/></span>\n                                    <span style={{paddingLeft: '5px', paddingRight: '5px', fontSize: \"18px\", fontWeight: \"bold\"}}>:</span>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"sec\" value={this.state.tieBreakSec} onChange={this.handleChange('tieBreakSec')}/></span>\n                                    <span style={{paddingLeft: '5px', paddingRight: '5px', fontSize: \"18px\", fontWeight: \"bold\"}}>:</span>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"ms\" value={this.state.tieBreakMs} onChange={this.handleChange('tieBreakMs')}/></span>\n                                </div>\n                            </div>\n                        </Row>\n                        <Row horiozontal=\"center\">\n                        <button className='submitBtn' onClick={ e => this.confirmSubmission()}>Submit</button>\n                        </Row>\n                        </div>: null}\n                        \n                    </div>\n                </Row>\n\n                <Dialog\n                    open={this.state.openDialog}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Are you sure you want to submit this scorecard?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            \n            </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button type='submit' onClick={e => this.submitScorecard()} color=\"primary\">\n                            Submit\n            </Button>\n                        <Button type='submit' onClick={this.closeDialog} color=\"default\">\n                            Cancel\n            </Button>\n                    </DialogActions>\n                </Dialog>\n    </div>;\n    }\n  }\n  \n  export default ResultsEntry;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AACA;AAuBA;AAAA;AACA;AAGA;AAJA;AACA;AA4GA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AA1GA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AACA;AACA;AACA;AACA;;;AAOA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;;;;AAlQA;AACA;AAoQA;;;;A","sourceRoot":""}