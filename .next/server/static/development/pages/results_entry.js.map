{"version":3,"file":"static/development/pages/results_entry.js","sources":["webpack:///webpack/bootstrap","webpack:///./api/api.js","webpack:///./components/Controls.js","webpack:///./components/LapTime.js","webpack:///./components/LapTimeList.js","webpack:///./components/StopWatch.js","webpack:///./components/Timer.js","webpack:///./components/header.js","webpack:///./controllers/controllers.js","webpack:///./controllers/timeFormat.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/date/now.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///./pages/results_entry.js","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Dialog\"","webpack:///external \"@material-ui/core/DialogActions\"","webpack:///external \"@material-ui/core/DialogContent\"","webpack:///external \"@material-ui/core/DialogContentText\"","webpack:///external \"@material-ui/core/DialogTitle\"","webpack:///external \"@material-ui/core/FormControl\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/FormLabel\"","webpack:///external \"@material-ui/core/InputLabel\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/Radio\"","webpack:///external \"@material-ui/core/RadioGroup\"","webpack:///external \"@material-ui/core/Select\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"axios\"","webpack:///external \"core-js/library/fn/date/now\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"http\"","webpack:///external \"react\"","webpack:///external \"regenerator-runtime\"","webpack:///external \"simple-flexbox\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import axios from 'axios';\nimport { maxHeaderSize } from 'http';\n\nexport function addCompetitor(firstName, lastName, age, location, gender){\n    const p = new Promise((res,reject)=>{\n        axios.post(`/api/add_competitor`, {\n            // axios.post(`http://localhost:5000/api/complete_profile`, {\n            params: {\n                firstName: firstName,\n                lastName: lastName,\n                age: age,\n                location: location,\n                gender: gender\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function getCompInfo(location){\n    const p = new Promise((res,reject)=>{\n        axios.get(`/api/get_comp_info`, {\n            params: {\n                location: location\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function getAthletes(location, max, min){\n    const p = new Promise((res,reject)=>{\n        axios.get(`/api/get_athletes`, {\n            params: {\n                location: location,\n                ageMax: max,\n                ageMin: min\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function getCourseObstacles(id){\n    const p = new Promise((res,reject)=>{\n        axios.get(`/api/get_obstacles`, {\n            params: {\n                course: id\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function postScorecard(athlete, course, points, tieOB, tieTime, resStr){\n    const p = new Promise((res,reject)=>{\n        axios.post(`/api/post_scorecard`, {\n            params: {\n                athlete: athlete,\n                course: course,\n                points: points,\n                tieOB: tieOB,\n                tieTime: tieTime,\n                resStr: resStr\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function postUpdatedScorecard(athlete, course, points, tieOB, tieTime, resStr){\n    const p = new Promise((res,reject)=>{\n        axios.post(`/api/post_updated_scorecard`, {\n            params: {\n                athlete: athlete,\n                course: course,\n                points: points,\n                tieOB: tieOB,\n                tieTime: tieTime,\n                resStr: resStr\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function postStandings(athlete, course, points){\n    const p = new Promise((res,reject)=>{\n        axios.post(`/api/post_standings`, {\n            params: {\n                // array: arr,\n                athlete_id: athlete.athlete_id,\n                course: course,\n                rank: points\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function updateStandings(athlete, total){\n    const p = new Promise((res,reject)=>{\n        axios.post(`/api/update_season_standings`, {\n            params: {\n                athlete_id: athlete.athlete_id,\n                total_athletes: total\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function postUpdatedRankings(obj){\n    const p = new Promise((res,reject)=>{\n        axios.post(`/api/update_season_rankings`, {\n            params: {\n                athlete_id: obj.ath,\n                ranking: obj.rank\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}\n\nexport function getStandings(ageMin, ageMax, location){\n    const p = new Promise((res,reject)=>{\n        axios.get(`/api/get_standings`, {\n            params: {\n                ageMin: ageMin,\n                ageMax: ageMax,\n                location: location\n            }\n        }).then(resp=>{\n            res(resp);\n        }).catch(err=>reject(err)); \n    })\n    return p;\n}","import React, { Component, PropTypes } from 'react';\nimport '../style/stopwatch.css';\nimport { Column, Row } from 'simple-flexbox';\n\nclass Controls extends Component {\n\n  // static proptTypes = {\n  //   isRunning  : PropTypes.bool,\n  //   start      : PropTypes.func.isRequired,\n  //   stop       : PropTypes.func.isRequired,\n  //   reset      : PropTypes.func.isRequired,\n  //   addLapTime : PropTypes.func.isRequired \n  // };\n\n  static defaultProps = {\n    isRunning : false,\n    choices : []\n  };\n\n  render() {\n    const { isRunning, start, stop, reset, addLapTime, choices } = this.props;\n\n    return (\n      <div className=\"Controls\">\n        { !isRunning ?\n            <button\n              onClick={ start }\n              className=\"startBtn\"\n              ref=\"startBtn\" > Start </button>\n          : null }\n\n        { isRunning ?\n          <button\n            onClick={ stop }\n            className=\"stopBtn\"\n            ref=\"stopBtn\" > Stop </button>\n        : null }\n\n        {/* <button\n          onClick={ reset }\n          disabled={ isRunning }\n          className=\"Controls__button\"\n          ref=\"resetBtn\" > Reset </button>\n\n        <button\n          onClick={ addLapTime }\n          disabled={ !isRunning }\n          className=\"Controls__button\"\n          ref=\"lapBtn\" > Lap Time </button> */}\n\n      </div>\n    );\n  }\n}\n\nexport default Controls;","import React, { Component, PropTypes } from 'react';\nimport '../style/stopwatch.css';\n\nimport timeFormat from '../controllers/timeFormat';\n\nclass LapTime extends Component {\n\n//   static proptTypes = {\n//     lap  : PropTypes.number,\n//     time : PropTypes.number\n//   };\n\n  static defaultProps = {\n    lap  : 0,\n    time : 0\n  };\n\n  render() {\n\n    const { lap, time } = this.props;\n\n    return (\n      <div className=\"LapTime\">\n        <span className=\"LapTime__lap\" >{ lap }</span>\n        <span className=\"LapTime__time\" >{ timeFormat( time ) }</span>\n      </div>\n    );\n  }\n}\n\nexport default LapTime;","import React, { Component, PropTypes } from 'react';\nimport '../style/stopwatch.css';\n\nimport LapTime from './LapTime';\n\nclass LapTimeList extends Component {\n\n//   static proptTypes = {\n//     timeList : PropTypes.array\n//   };\n\n  static defaultProps = {\n    timeList : []\n  };\n\n  render() {\n\n    const { timeList } = this.props;\n\n    return (\n      <div className=\"LapTimeList\">\n        <div className=\"LapTimeList__listwrap\">\n\n          <div className=\"LapTimeList__headers\">\n            <span> Lap </span> <span> Time </span>\n          </div>\n\n          <ul className=\"LapTimeList__list\" > \n            {\n              timeList.map( (time, index) => {\n                return (\n                  <li key={ index }>\n                    <LapTime lap={ index + 1 } time={ time }  />\n                  </li>\n                )\n              })\n            }\n          </ul>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LapTimeList;","import React, { Component } from 'react';\nimport '../style/stopwatch.css';\n\nimport Timer         from './Timer';\nimport Controls      from './Controls';\nimport LapTimeList   from './LapTimeList';\nimport { Column, Row } from 'simple-flexbox';\n\n\nfunction getDefaultState() {\n  return {\n    isRunning : false,\n    time      : 0,\n    timeList  : [],\n    choices: [],\n    start: 0,\n    stopTime: 0,\n    restartTime: 0,\n    adjustedTime: 0\n  }\n}\n\nclass Stopwatch extends Component {\n\n  constructor( props ) {\n    super(props);\n    this.state    = getDefaultState();\n    this.timerRef = null;\n  }\n\n  updateTimer(extraTime) {\n    const { time } = this.state;\n    // this.setState({ time : time + extraTime });\n    this.setState({ time : extraTime });\n  }\n\n\n//   setInterval(function() {\n//       var delta = Date.now() - start; // milliseconds elapsed since start\n//       …\n//       output(Math.floor(delta / 1000)); // in seconds\n//       // alternatively just show wall clock time:\n//       output(new Date().toUTCString());\n//   }, 1000); // update about every second\n\n  start() {\n    if(this.state.stopTime != 0){\n        this.setState({restartTime: Date.now(), adjustedTime: this.state.adjustedTime + (Date.now() - this.state.stopTime)});\n    }else{\n        this.setState({start: Date.now()});\n    }\n    this.setState({\n      isRunning : true \n    }, () => {\n      this.timerRef = setInterval(\n        () => {\n            //  this.updateTimer( 10 ) \n            var delta = Date.now() - this.state.start - (this.state.adjustedTime); // milliseconds elapsed since start\n            this.updateTimer(delta);\n            }, 10\n      )\n    });\n  }\n\n  stop() {\n    this.setState({\n      isRunning : false,\n      stopTime: Date.now()\n    }, () => {\n      clearInterval(this.timerRef);\n    });\n  }\n\n//   reset() {\n//     this.setState(getDefaultState());\n//   }\n\n//   addLapTime() {\n//     const { time, timeList } = this.state;\n\n//     this.setState({\n//       timeList : [ ...timeList, time ] \n//     });\n//     this.someFn();\n//   }\n\n  addObstacleTime(val) {\n    var returnTime = this.state.time;\n      this.props.callbackFromParent(returnTime, val);\n      if(this.props.obstacleInd == (this.props.obstacleCnt-1)){\n        this.stop();\n      }\n  }\n\n  render() {\n\n    const { isRunning, time, timeList } = this.state;\n\n    return (\n      <div className=\"Stopwatch\">\n\n        <div style={{fontSize: '24px', fontWeight: 'bold'}}>Timer</div>\n\n        <Timer time={ time } />\n\n        <Controls\n          isRunning={ isRunning } \n          start={ () => this.start() }\n          stop={ () => this.stop() }\n        />\n\n        { isRunning ?\n          <div className=\"obstacleBox\">\n          <div  className=\"SWBoxTitle\">{this.props.obstacle}</div>\n          <Row horizontal=\"center\" wrap>\n          {this.props.choices.map((item, index) => {\n                return <div className={item.selected == true ? \"SWBoxContent activeBox\" : \"SWBoxContent\"} onClick={e=> this.addObstacleTime(item) }>{item.value}</div>\n            })}\n            </Row>\n          </div>\n          : null }  \n\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;","import React, { PropTypes, Component } from 'react';\nimport '../style/stopwatch.css';\n\nimport timeFormat from '../controllers/timeFormat';\n\nclass Timer extends Component {\n\n//   static proptTypes = {\n//     time : PropTypes.number\n//   };\n\n  static defaultProps = {\n    time : 0\n  };\n\n  render() {\n    const { time } = this.props;\n\n    return (\n      <div className=\"Timer\">\n        { timeFormat( time ) }\n      </div>\n    );\n  }\n}\n\nexport default Timer;","import React, { Component } from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport '../style/header.css';\n// import Button from '@material-ui/core/Button';\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass UNHeader extends Component { \n\n    render() {\n        return (\n            <div>\n                <Row className=\"headerSection\" vertical='center' wrap style={{paddingBottom: '10px'}}>\n                    <Column flexBasis='0%' style={{paddingTop: '15px', paddingBottom: '15px', paddingLeft: '15px'}}><img alt='un_logo' src='../static/un_logo.png' width=\"175\" height=\"auto\"/></Column>\n                    <Column horizontal='center' flexGrow={1} className=\"mainTitle\">{this.props.title}</Column>\n                    <Column>\n                        {this.props.link != '' ? <Link style={{ textDecoration: 'none' }} to={this.props.link}><button className='navBtn'>{this.props.linkTitle}</button></Link> : <div style={{width: '150px'}}></div>}\n                    </Column>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default UNHeader;\n","export function convertObstacles(arr){\n    const p = new Promise((res,reject)=>{\n        var newArr = [];\n        arr.forEach(function(item, index){\n            item.choices = [];\n            item.time = '';\n            for(var i=0; i<=item.linear_points_available; i++){\n                item.choices.push({key: item.obstacle_id + ':' + i,value: i, selected: false});\n            }\n        })\n        res(arr);\n    })\n    return p;\n}\n\nexport function resetObstacleArr(arr){\n    const p = new Promise((res,reject)=>{\n        arr.forEach(function(item, index){\n            item.time = '';\n            for(var i=0; i<item.choices.length; i++){\n                item.choices[i].selected = false;\n            }\n        })\n        res(arr);\n    })\n    return p;\n}\n\nexport function calculateScore(arr){\n    const p = new Promise((res,reject)=>{\n        var resArr = [];\n        var totalScore = 0;\n        arr.forEach(function(item, index){\n            for(var i=0; i<item.choices.length; i++){\n                if(item.choices[i].selected == true){\n                    totalScore += item.choices[i].value;\n                    resArr.push({key: item.obstacle_id , value: item.choices[i].value, time: item.time});\n                }\n            }\n        })\n        var returnVar = {score: totalScore, resStr: resArr};\n        res(returnVar);\n    })\n    return p;\n}\n\nfunction checkResult(arr, id){\n    const found = arr.some(el => el.athlete_id === id);\n    return found;\n}\n\nfunction getAgeArray(arr, ageMin, ageMax){\n    var newArr = [];\n    for(var a=0; a<arr.length; a++){\n        if(arr[a].age >= ageMin && arr[a].age < ageMax+1){\n            newArr.push(arr[a]);\n        }\n    }\n    return newArr;\n}\n\nfunction compare(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const pointsA = a.rank;\n    const pointsB = b.rank;\n  \n    let comparison = 0;\n    if (pointsA > pointsB || pointsB == '' || pointsA=='') {\n      comparison = 1;\n    }else if (pointsA < pointsB ) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  function convertMilliSec(t){\n    var time;\n    var hour = t.split(\":\")[0];\n    var min = t.split(\":\")[1];\n    var sec = t.split(\":\")[2].split('.')[0];\n    var ms = t.split(\":\")[2].split('.')[1];\n    \n    time = (((hour*3600) + (min*60) + (sec))*1000) + ms;\n\n    return time\n  }\n\n  \nfunction rankArrFunc(arr){\n    var newArr = arr;\n    for(var a=0; a<arr.length;a++){\n        var rank = 1;\n        var newRank = false;\n        for(var b=0; b<arr.length;b++){\n        if(arr[a].points !== '' && arr[a].athlete_id !== arr[b].athlete_id){\n            if(arr[a].points == arr[b].points){\n                if(parseInt(arr[a].tieOB) > parseInt(arr[b].tieOB)){\n                    // arr[a].rank = rank;\n                    newRank = true;\n                }else if(arr[a].tieOB == arr[b].tieOB){\n                    if(arr[a].tieOB == ''){\n                        if(arr[a].tieTime < arr[b].tieTime){\n                            // arr[a].rank = rank;\n                            newRank = true;\n                        }else if(arr[a].tieTime == arr[b].tieTime){\n                            // arr[a].rank = rank;\n\n                            newRank = true;\n                        }else{\n                            rank += 1;\n                        }\n                    }else{\n                        var ath1res = JSON.parse(arr[a].resultStr);\n                        var ath1pts;\n                        var ath2res = JSON.parse(arr[b].resultStr);\n                        var ath2pts;\n                        console.log(ath1res);\n                        console.log(ath2res);\n                        for(var a1=0; a1<ath1res.length; a1++){\n                            // if(ath1res[a1].key == arr[a].tieOB){\n                            if((a1+1) == arr[a].tieOB){\n                                ath1pts = ath1res[a1].value;\n                                break;\n                            }\n                        }\n                        for(var a2=0; a2<ath2res.length; a2++){\n                            // if(ath2res[a2].key == arr[a].tieOB){\n                            if((a2+1) == arr[a].tieOB){ \n                                ath2pts = ath2res[a2].value;\n                                break;\n                            }\n                        }\n                        console.log(ath1pts + ' : ' + ath2pts);\n                        \n                        if(ath1pts > ath2pts){\n                            newRank = true;\n                        }else if(ath1pts == ath2pts){\n                            var aTime = convertMilliSec(arr[a].tieTime);\n                            var bTime = convertMilliSec(arr[b].tieTime);\n                            if(arr[a].tieTime < arr[b].tieTime){\n                                newRank = true;\n                            }else if(arr[a].tieTime == arr[b].tieTime){\n                                newRank = true;\n                            }else{\n                                rank += 1;\n                            }\n                        }else{\n                            rank += 1;\n                        }\n                    }\n                }else{\n                    rank += 1;\n                }\n            }else if(arr[a].points < arr[b].points){\n                //lower points\n                rank += 1;\n            }else{\n                //more points\n                // arr[a].rank = rank;\n                newRank = true;\n            }\n        // }else{\n        //     newRank = true;\n        // }\n        }\n    }\n    \n    if(newRank == true){\n        arr[a].rank = rank;\n    }else{\n        arr[a].rank = arr.length;\n    }\n    }\n    return arr\n}\n\nexport function rankFunction(results, athletes, ageMin, ageMax){\n    const p = new Promise((res,reject)=>{\n        var completedCount = 0;\n        var kidArray = getAgeArray(athletes, ageMin,ageMax);\n        for(var a=0; a<kidArray.length; a++){\n            var resultMatch = checkResult(results, kidArray[a].athlete_id);\n            if(resultMatch == true){\n                for(var i=0; i<results.length; i++){\n                    if(kidArray[a].athlete_id == results[i].athlete_id){\n                        kidArray[a].points = results[i].Points;\n                        kidArray[a].tieOB = results[i].tiebreaker_obstacle;\n                        kidArray[a].tieTime = results[i].tiebreaker_time;\n                        kidArray[a].resultStr = results[i].result_string;\n                        kidArray[a].completed = true;\n                        completedCount += 1;\n                        break;\n                    }\n                }\n                \n            }else{\n                kidArray[a].points = '';\n                kidArray[a].tieOB = '';\n                kidArray[a].tieTime = '';\n                kidArray[a].resultStr = '';\n                kidArray[a].completed = false;\n                kidArray[a].rank = '';\n            }\n        }\n        var rankArray = rankArrFunc(kidArray);\n        rankArray.sort(compare);\n        res({array: rankArray, completedCount: completedCount});\n    })\n    return p;\n}\n\nexport function checkActiveScorecard(results, obstacles, athlete){\n    const p = new Promise((res,reject)=>{\n        var tiebreakMin = '';\n        var tiebreakSec = '';\n        var tiebreakMS = '';\n        var existingScorecard = false;\n        console.log(athlete);\n        for(var i=0; i<results.length; i++){\n            if(results[i].athlete_id == athlete){\n                console.log('success');\n                var resultArr = JSON.parse(results[i].result_string);\n                for(var z=0; z<obstacles.length; z++){\n                    for(var x=0; x<resultArr.length; x++){\n                        if(obstacles[z].obstacle_id == resultArr[x].key){\n                            for(var k=0; k<obstacles[z].choices.length; k++){\n                                if(obstacles[z].choices[k].value == resultArr[x].value){\n                                    obstacles[z].choices[k].selected = true;\n                                    if(resultArr[x].time){\n                                        obstacles[z].time = resultArr[x].time;\n                                    }\n                                    break;\n                                }\n                            }\n                            break;\n                        }\n                    }\n                }\n                tiebreakMin = results[i].tiebreaker_time.split(\":\")[1];\n                tiebreakSec = results[i].tiebreaker_time.split(\":\")[2].split(\".\")[0];\n                tiebreakMS = results[i].tiebreaker_time.split(\":\")[2].split(\".\")[1];\n                existingScorecard = true;\n                break;\n            }\n        }\n        res({obstacles: obstacles, min: tiebreakMin, sec: tiebreakSec, ms: tiebreakMS, existingScorecard: existingScorecard});\n    })\n    return p;\n}\n\nfunction sortArr(arr){\n    var cnt = 0;\n    for(var i=0; i<arr.length; i++){\n        if(arr[i].pts == 0){\n            cnt += 1;\n        }\n    }\n    if(cnt > 0){\n        for(var z=0; z<cnt; z++){\n            arr.push(arr[z]);\n        }\n        arr.splice(0, cnt);\n    }\n    return arr;\n}\n\nfunction getAvg(arr, comps){\n    arr = sortArr(arr);\n    console.log(arr);\n    var avg;\n    var num = 0;\n    var total;\n    if(arr.length < comps){\n        total = arr.length;\n    }else{\n        total = comps;\n    }\n    for(var i = 0; i<total; i++){\n            num += arr[i].rank;\n    }\n    if(total > 0){\n        avg = num/total;\n        console.log(avg);\n    }\n    return avg;\n}\n\nfunction getPts(arr, comps, athCnt){\n    var num = 0;\n    var total;\n    if(arr.length < comps){\n        total = arr.length;\n    }else{\n        total = comps;\n    }\n    for(var i = 0; i<total; i++){\n            num += athCnt - (arr[i].rank-1);\n    }\n    return num;\n}\n\nexport function updateSeasonRanking(athletes){\n    const p = new Promise((res,reject)=>{\n        for(var a=0; a<athletes.length; a++){\n            var rank = 1;\n            for(var b=0; b<athletes.length; b++){\n                var checkA;\n                var checkB;\n                if(athletes[a].ath !== athletes[b].ath){\n                    if(athletes[a].pts < athletes[b].pts){\n                        rank += 1;\n                    }else if(athletes[a].pts == athletes[b].pts){\n                        checkA = getAvg(athletes[a].res, 6);\n                        checkB = getAvg(athletes[b].res, 6);\n                        if(checkA > checkB){\n                            rank +=1;\n                        }else if(checkA == checkB){\n                            checkA = getPts(athletes[a].res, 7, athletes.length);\n                            checkB = getPts(athletes[b].res, 7, athletes.length);\n                            if(checkA < checkB){\n                                rank += 1;\n                            }else if(checkA == checkB){\n                                checkA = getAvg(athletes[a].res, 7);\n                                checkB = getAvg(athletes[b].res, 7);\n                                if(checkA > checkB){\n                                    rank +=1;\n                                }else if(checkA == checkB){\n                                    checkA = getPts(athletes[a].res, 8, athletes.length);\n                                    checkB = getPts(athletes[b].res, 8, athletes.length);\n                                    if(checkA < checkB){\n                                        rank += 1;\n                                    }else if(checkA == checkB){\n                                        checkA = getAvg(athletes[a].res, 8);\n                                        checkB = getAvg(athletes[b].res, 8);\n                                        if(checkA > checkB){\n                                            rank +=1;\n                                        }\n                                    }\n                            }\n                            }\n                        }\n                    }\n                }\n            }\n            athletes[a].rank = rank;\n        }\n        res({array: athletes});\n    })\n    return p;\n}","function zeroPad(number, size = 2) {\n    let s = String(number);\n    while (s.length < size) { s = '0' + s;}\n    return s;\n  }\n  \n  // Convert time from miliseconds int to hh:mm:ss.S string\n  export default function timeFormat(miliseconds) {\n  \n    let remaining = miliseconds / 1000;\n  \n    const hh = parseInt( remaining / 3600, 10 );\n  \n    remaining %= 3600;\n  \n    const mm = parseInt( remaining / 60, 10 );\n    const ss = parseInt( remaining % 60, 10 );\n    const S  = parseInt( (miliseconds % 1000) / 10, 10 );\n  \n    return `${ zeroPad( hh ) }:${ zeroPad( mm ) }:${ zeroPad( ss ) }.${ zeroPad( S ) }`;\n  }","module.exports = require(\"core-js/library/fn/date/now\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","module.exports = require(\"regenerator-runtime\");\n","import React, { Component } from 'react';\nimport UNHeader from \"../components/header\";\nimport '../style/results_entry.css';\nimport {getCompInfo, getCourseObstacles, postScorecard, postStandings, postUpdatedScorecard} from '../api/api';\nimport {convertObstacles, calculateScore, resetObstacleArr,rankFunction, checkActiveScorecard} from '../controllers/controllers';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { Column, Row } from 'simple-flexbox';\nimport {addCompetitor} from '../api/api';\nimport Stopwatch from '../components/StopWatch';\nimport timeFormat from '../controllers/timeFormat';\n\nclass ResultsEntry extends Component {\n\n\n    state = {\n        location: \"\",\n        courses: [],\n        athletes: [],\n        obstacles: [],\n        courseIndex: \"\",\n        showLocationSelect: true,\n        showCourseSelect: false,\n        showAgeSelect: false,\n        showCompetitors: false,\n        ageMin: '',\n        ageMax: '',\n        showScorecard: false,\n        currentAthlete: '',\n        currentAthleteIndex: '',\n        tiebreakerOb: \"\",\n        tieBreakMin: '',\n        tieBreakSec: '',\n        tieBreakMs: '',\n        openDialog: false,\n        resultsArr: [],\n        rankArr: [],\n        openFinalDialog: false,\n        completedCount: 0,\n        errorDialog: false,\n        errorMsg: '',\n        existingScorecard: false,\n        obstacleIndex: 0,\n        editTime: false,\n        editTimeMin: '',\n        editTimeSec: '',\n        editTimeMS: '',\n        editTimeOb: 0,\n    };\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    setLocation(val){\n        this.setState({location: val, showLocationSelect: false, showCourseSelect: true});\n        getCompInfo(val).then(resp=>{\n            this.setState({courses: resp.data.courses, athletes: resp.data.athletes});\n        })\n    }\n\n    setCourse(ind){\n        var indx;\n        for(var i=0; i<this.state.courses.length; i++){\n            if(this.state.courses[i].course_id == ind){\n                indx = i;\n            }\n        }\n        this.setState({courseIndex: indx, showCourseSelect: false, showAgeSelect: true});\n        getCourseObstacles(this.state.courses[indx].course_id).then(resp=>{\n            convertObstacles(resp.data.obstacles).then(resp2=>{\n                    this.setState({obstacles: resp2, resultsArr: resp.data.results});\n            })\n            \n        });\n    }\n\n    setAgeGroup(min,max){\n        this.setState({ageMin: min, ageMax: max, showCompetitors: true});\n        rankFunction(this.state.resultsArr, this.state.athletes, min, max).then(resp=>{\n            console.log(resp);\n            this.setState({rankArr: resp.array, completedCount: resp.completedCount});\n        })\n    }\n\n    setScorecard(athlete){\n        var elementPos = this.state.rankArr.map(function(x) {return x.athlete_id; }).indexOf(athlete);\n        checkActiveScorecard(this.state.resultsArr, this.state.obstacles, athlete).then(resp=>{\n            console.log(resp);\n            this.setState({currentAthleteIndex: elementPos,currentAthlete: athlete, showCompetitors: false, \n                showAgeSelect: false, showScorecard: true, obstacles: resp.obstacles, tieBreakMin: resp.min, tieBreakSec: resp.sec,\n                tieBreakMs: resp.ms, existingScorecard: resp.existingScorecard, obstacleIndex: 0});\n                document.getElementById('resultsEntry').scrollTop = 0;\n        });\n    }\n\n    createPointRow(item){\n        let table = []\n    for (let i = 0; i < item.choices.length; i++) {\n      table.push(<div className={item.choices[i].selected == true ? \"obstacleBoxContent activeBox\" : \"obstacleBoxContent\"} onClick={e=>this.addPoints(item, item.choices[i].key)}>{item.choices[i].value}</div>)\n    }\n    return table\n    }\n\n    checkTie(){\n        var tie = false;\n        var tieOB;\n        var tieMin = '';\n        var tieSec = '';\n        var tieMS = '';\n        this.state.obstacles.forEach((item,index)=>{\n            for(var i=0; i<item.choices.length; i++){\n                if(tie==false && i !== (item.choices.length-1) && item.choices[i].selected == true){\n                    tie = true;\n                    tieOB = item.obOrder;\n                    if(index>0 && this.state.obstacles[index-1].time != ''){\n                        tieMin = this.state.obstacles[index-1].time.split(\":\")[1];\n                        tieSec = this.state.obstacles[index-1].time.split(\":\")[2].split('.')[0];\n                        tieMS = this.state.obstacles[index-1].time.split(\":\")[2].split('.')[1];\n                    }else if(index == 0 && item.time !=''){\n                        tieMin = item.time.split(\":\")[1];\n                        tieSec = item.time.split(\":\")[2].split('.')[0];\n                        tieMS = item.time.split(\":\")[2].split('.')[1];\n                    }\n                    this.setState({tiebreakerOb: tieOB, tieBreakMin: tieMin, tieBreakSec: tieSec, tieBreakMs: tieMS});\n                    break;\n                }\n            }\n            if(tie == false){\n                if(this.state.obstacles[this.state.obstacles.length - 1].time != ''){\n                    tieMin = item.time.split(\":\")[1];\n                    tieSec = item.time.split(\":\")[2].split('.')[0];\n                    tieMS = item.time.split(\":\")[2].split('.')[1];\n                }\n                this.setState({tiebreakerOb: \"\", tieBreakMin: tieMin, tieBreakSec: tieSec, tieBreakMs: tieMS});\n            }\n        });\n    }\n\n    convertTime(min, sec, ms){\n        console.log(min);\n        console.log(sec);\n        console.log(ms);\n        if(parseInt(min) < 10 && min !== '00'){\n            min = '0' + min;\n        }else if(min ==''){\n            min = \"00\";\n        }\n        if(parseInt(sec) < 10 && sec !== '00'){\n            sec = '0' + sec;\n        }else if(sec ==''){\n            sec = \"00\";\n        }\n        if(parseInt(ms) < 10 && ms !== '00'){\n            ms = '0' + ms;\n        }else if(ms ==''){\n            ms = \"00\";\n        }\n        return '00' + ':' + min + ':' + sec + '.' + ms;\n      }\n\n    addPoints(item, c_id, time){\n        for(var i=0; i<item.choices.length;i++){\n            if(item.choices[i].key != c_id){\n                item.choices[i].selected = false;\n            }else{\n                item.choices[i].selected = true;\n                if(time){\n                    item.time = timeFormat( time );\n                }\n                this.checkTie();\n            }\n        }\n        this.setState({obstacles: this.state.obstacles});\n    }\n\n    confirmSubmission(val){\n        if(val =='scorecard'){\n            this.setState({openDialog: true});\n        }else{\n            this.setState({openFinalDialog: true});\n        }   \n    }\n\n    submitScorecard(){\n        var tiebreakTime = this.convertTime(this.state.tieBreakMin, this.state.tieBreakSec, this.state.tieBreakMs);\n        calculateScore(this.state.obstacles).then(resp=>{\n            var points = resp.score;\n            var resultString = resp.resStr;\n            if(resultString.length !== this.state.obstacles.length && resultString.length > 0){\n                this.setState({openDialog: false, errorDialog: true, errorMsg: \"At least one obstacle is missing a point selection!\"});\n            }else if(tiebreakTime == '00:00:00.00' && resultString.length > 0){\n                this.setState({openDialog: false, errorDialog: true, errorMsg: \"Tiebreak time is zero and should have a value!\"});\n            }else{\n                postScorecard(this.state.currentAthlete, this.state.courses[this.state.courseIndex].course_id, points, this.state.tiebreakerOb, tiebreakTime, JSON.stringify(resultString)).then(resp2=>{\n                    console.log(resp2);\n                    if(\"affectedRows\" in  resp2.data.status){\n                        resetObstacleArr(this.state.obstacles).then(resp3=>{\n                            rankFunction(resp2.data.results, this.state.athletes, this.state.ageMin, this.state.ageMax).then(resp4=>{\n                                this.setState({showScorecard: false, showCompetitors: true, currentAthlete: '', openDialog: false, showAgeSelect: true, \n                                        tieBreakMin: '', tieBreakSec: '', tieBreakMs: '', tiebreakerOb: '', obstacles: resp3, \n                                        rankArr: resp4.array, completedCount: resp4.completedCount, resultsArr: resp2.data.results,\n                                        existingScorecard: false});\n                            });\n                        });\n                    }else{\n                        this.setState({openDialog: false, errorDialog: true, errorMsg: \"No connection to the database! Please copy the results on paper and submit when internet is back online.\"});\n                    }\n                });\n            }\n        });\n    }\n\n    updateScorecard(){\n        var tiebreakTime = this.convertTime(this.state.tieBreakMin, this.state.tieBreakSec, this.state.tieBreakMs);\n        calculateScore(this.state.obstacles).then(resp=>{\n            var points = resp.score;\n            var resultString = resp.resStr;\n            if(resultString.length !== this.state.obstacles.length && resultString.length > 0){\n                this.setState({openDialog: false, errorDialog: true, errorMsg: \"At least one obstacle is missing a point selection!\"});\n            }else if(tiebreakTime == '00:00:00.00' && resultString.length > 0){\n                this.setState({openDialog: false, errorDialog: true, errorMsg: \"Tiebreak time is zero and should have a value!\"});\n            }else{\n                postUpdatedScorecard(this.state.currentAthlete, this.state.courses[this.state.courseIndex].course_id, points, this.state.tiebreakerOb, tiebreakTime, JSON.stringify(resultString)).then(resp2=>{\n                    if(\"affectedRows\" in  resp2.data.status){\n                        resetObstacleArr(this.state.obstacles).then(resp3=>{\n                            rankFunction(resp2.data.results, this.state.athletes, this.state.ageMin, this.state.ageMax).then(resp4=>{\n                                this.setState({showScorecard: false, showCompetitors: true, currentAthlete: '', openDialog: false, showAgeSelect: true, \n                                        tieBreakMin: '', tieBreakSec: '', tieBreakMs: '', tiebreakerOb: '', obstacles: resp3, \n                                        rankArr: resp4.array, completedCount: resp4.completedCount, resultsArr: resp2.data.results,\n                                        existingScorecard: false});\n                            });\n                        });\n                    }else{\n                        this.setState({openDialog: false, errorDialog: true, errorMsg: \"No connection to the database! Please copy the results on paper and submit when internet is back online.\"});\n                    }\n                });\n            }\n        });\n    }\n\n    functionThatUsesResolvedValues(val){\n        console.log(val);\n    }\n\n    async finalizeResults(){\n        let resolvedFinalArray = await Promise.all(this.state.rankArr.map(async(value) => { // map instead of forEach\n            // var points;\n            var rank;\n            if(value.points < 1 && value.resultStr == '[]'){\n                // points = 0;\n                rank = 0;\n            }else{\n                // points = this.state.rankArr.length - (value.rank - 1);\n                rank = value.rank;\n            }\n            // const result = await postStandings(value, this.state.courses[this.state.courseIndex], points);\n            const result = await postStandings(value, this.state.courses[this.state.courseIndex], rank);\n            return result; // important to return the value\n        }));\n        var respArr = resolvedFinalArray;\n        this.setState({openFinalDialog: false, showCompetitors: false, ageMin: '', ageMax: ''});\n    }\n\n    goBack(){\n        if(this.state.showScorecard == true){\n            resetObstacleArr(this.state.obstacles).then(resp=>{\n                this.setState({showScorecard: false, showCompetitors: true, currentAthlete: '', showAgeSelect: true, obstacles: resp, existingScorecard: false})\n            });\n        }else if(this.state.showCompetitors == true || this.state.showAgeSelect == true){\n            this.setState({showCompetitors: false, ageMin: '', ageMax: '', showAgeSelect: false, showCourseSelect: true, obstacles: [], resultsArr: [] });\n        }else{\n            this.setState({showCourseSelect: false,  courseIndex: '', courses: [], athletes: [], location: '', showLocationSelect: true});\n        }\n    }\n\n    closeDialog = (type) =>{\n        this.setState({ openDialog: false, openFinalDialog: false, errorDialog: false, editTime: false });\n}\n\nmyCallback = (time, obstacle)=>{\n    this.addPoints(this.state.obstacles[this.state.obstacleIndex], obstacle.key, time);\n    if(this.state.obstacleIndex < (this.state.obstacles.length-1)){\n        this.setState({obstacleIndex: this.state.obstacleIndex + 1});\n    }\n}\n\neditTimeFunc(time, ind){\n    var min = '';\n    var sec = '';\n    var ms = '';\n    if(time !=''){\n        var min = time.split(\":\")[1];\n        var sec = time.split(\":\")[2].split('.')[0];\n        var ms = time.split(\":\")[2].split('.')[1];\n    }\n    this.setState({editTime: true, editTimeMin: min, editTimeSec: sec, editTimeMS: ms, editTimeOb: ind});\n}\nsubmitNewTime(){\n    this.state.obstacles[this.state.editTimeOb].time = this.convertTime(this.state.editTimeMin, this.state.editTimeSec, this.state.editTimeMS);\n    this.setState({editTime: false, editTimeMin: '', editTimeSec: '', editTimeMS: ''});\n    this.checkTie();\n}\n\n\n    componentDidMount(){\n        console.log(this);\n    }\n\n    render(){\n    return <div id=\"resultsEntry\" className=\"resultsEntry\">\n        <UNHeader title='Youth League Results' link='' linkTitle=''></UNHeader>\n\n        <Row>\n                    <div className=\"pageContainer\">\n\n                    {this.state.location !== '' ?\n                    <div className=\"choiceBox\" onClick={e=>this.goBack()}>Back</div>: null}\n                    {this.state.showLocationSelect == true ?\n                    <div>\n                        <div className=\"subTitle\">Please Select Your Location</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                            <div className=\"choiceBox\" onClick={e=>this.setLocation(1)}>Chicago</div>\n                            <div className=\"choiceBox\" onClick={e=>this.setLocation(2)}>Naperville</div>\n                            <div className=\"choiceBox\" onClick={e=>this.setLocation(3)}>Libertyville</div>\n                        </Row></div> : null}\n                        {this.state.showCourseSelect == true ?\n                        <div>\n                        <div className=\"subTitle\">Please Select Your Competition Date</div>\n                        <Row horizontal=\"start\" wrap style={{marginTop: \"20px\"}}>\n                            {this.state.courses.map((item, index) => (\n                                <div className=\"choiceBox\" style={{margin: \"5px\"}} onClick={e=>this.setCourse(item.course_id)}>{item.comp_date.split(\"T\")[0]}</div>\n                            ))}\n                        </Row> </div>: null}\n\n                        {this.state.showAgeSelect == true ?\n                        <div>\n                        <div className=\"subTitle\">Please Select an Age Group</div>\n                        <Row horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        <div className={this.state.ageMax == 8 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(6,8)}>Ages 6-8</div>\n                        <div className={this.state.ageMax == 10 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(9,10)}>Ages 9-10</div>\n                        <div className={this.state.ageMax == 12 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(11,12)}>Ages 11-12</div>\n                        <div className={this.state.ageMax == 16 ? \"choiceBox activeBox\" : \"choiceBox\"} onClick={e=>this.setAgeGroup(13,16)}>Ages 13-16</div>\n                        </Row> </div>: null}\n\n                        {this.state.showCompetitors == true ?\n                        <div>\n                        <div className=\"subTitle\">Ninjas</div>\n                        <Column horizontal=\"spaced\" wrap style={{marginTop: \"20px\"}}>\n                        {this.state.rankArr.map((item, index) => {\n                            if(item.age >= this.state.ageMin && item.age < this.state.ageMax+1){\n                                return <div className={item.completed == true ? \"athleteBox completed\" : \"athleteBox\"} onClick={e=>this.setScorecard(item.athlete_id)}>\n                                    <Row horizontal='space-around' vertical='center'>\n                                        <div>{item.rank}.</div>\n                                        <div>{item.first_name + ' ' + item.last_name}</div>\n                                        <div><div>{item.points}</div><div style={{fontSize: \".8em\", color: \"#979797\"}}>Pts.</div></div>\n                                    </Row>\n                                </div>\n                            }\n                        })}\n                        </Column>\n                        <Row horiozontal=\"center\">\n                        {this.state.completedCount == this.state.rankArr.length ? \n                        <button className='submitBtn' onClick={ e => this.confirmSubmission('results')}>Submit</button> : null} \n                        </Row> </div>: null}\n\n                        {this.state.showScorecard == true ?\n                        <div>\n                            <Row flexGrow={1} flexBasis='auto'>\n                        <div>\n                         <Column horizontal=\"start\">\n                        <div className=\"subTitle\">Scorecard</div>\n                        <Row horizontal=\"start\" wrap style={{marginTop: \"20px\"}}>\n                            <div>\n                                <div>Name:</div>\n                                <div className=\"scName\">{this.state.rankArr[this.state.currentAthleteIndex].first_name + ' ' + this.state.rankArr[this.state.currentAthleteIndex].last_name}</div>\n                            </div>\n                            <div align=\"middle\" className=\"submitBtn\" style={{width: \"75px\", marginLeft: \"10px\"}} onClick={e => this.confirmSubmission('scorecard')}>Absent</div>\n                        </Row>\n                        </Column>   \n                        </div>\n\n                        <div style={{width: \"100%\"}}>\n                        <Column>\n                        {this.state.existingScorecard == false ? \n                            <Stopwatch callbackFromParent={this.myCallback} choices={this.state.obstacles[this.state.obstacleIndex].choices} obstacle={this.state.obstacles[this.state.obstacleIndex].obstacle} obstacleInd={this.state.obstacleIndex} complete={this.state.scoreCardComplete} obstacleCnt={this.state.obstacles.length}/>\n                            : null}\n                        <Column horizontal=\"center\" style={{marginTop: '35px'}}>\n                        {this.state.obstacles.map((item, index) => {\n                            return <div className=\"obstacleBox\">\n                            <div  className=\"obstacleBoxTitle\">{item.obstacle}</div>\n                            <Row horizontal=\"center\">\n                                {this.createPointRow(item)}\n                            </Row>\n                            <Row horizontal='center' style={{padding: \"5px\", borderTop: \"1px solid rgb(230,230,230)\"}}><div>{item.time}</div>\n                            <div align=\"right\" style={{fontSize: '11px', cursor: \"pointer\", marginLeft: '15px', color: \"rgb(0,90,180)\"}}><a onClick={e=> this.editTimeFunc(item.time, index)}>edit time</a></div>\n                            </Row></div>\n                            })}\n                        </Column> \n                        <Row horizontal=\"center\" style={{marginTop: \"20px\"}}>\n                        <div style={{marginRight: \"30px\"}}>\n                                <div>Tiebreaker Obstacle</div>\n                                <div align=\"middle\" style={{fontSize: \"18px\", fontWeight: \"bold\", marginTop: \"10px\"}}>{this.state.tiebreakerOb}</div>\n                            </div>\n                            <div>\n                                <div>Tiebreaker Time</div>\n                                <div style={{marginTop: \"10px\"}}>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"min\" value={this.state.tieBreakMin} onChange={this.handleChange('tieBreakMin')}/></span>\n                                    <span style={{paddingLeft: '5px', paddingRight: '5px', fontSize: \"18px\", fontWeight: \"bold\"}}>:</span>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"sec\" value={this.state.tieBreakSec} onChange={this.handleChange('tieBreakSec')}/></span>\n                                    <span style={{paddingLeft: '5px', paddingRight: '5px', fontSize: \"18px\", fontWeight: \"bold\"}}>:</span>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"ms\" value={this.state.tieBreakMs} onChange={this.handleChange('tieBreakMs')}/></span>\n                                </div>\n                            </div>\n                        </Row>\n                        <Row horizontal=\"center\">\n                            {this.state.existingScorecard == false ? <button className='submitBtn' onClick={ e => this.confirmSubmission('scorecard')}>Submit</button>\n                             : <button className='updateBtn' onClick={ e => this.confirmSubmission('scorecard')}>Update</button>}\n                        </Row>\n                        </Column>\n                        </div>\n                        </Row>\n                        </div>: null}\n                        \n                    </div>\n                </Row>\n\n                <Dialog\n                    open={this.state.openDialog}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Are you sure you want to submit this scorecard?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            \n            </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    {this.state.existingScorecard == false ?\n                    <Button type='submit' onClick={e => this.submitScorecard()} color=\"primary\">\n                            Submit\n                    </Button>\n                    :\n                    <Button type='submit' onClick={e => this.updateScorecard()} color=\"primary\">\n                            Update\n                    </Button>\n                    }\n                        <Button type='submit' onClick={this.closeDialog} color=\"default\">\n                            Cancel\n            </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.errorDialog}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">ERROR: {this.state.errorMsg}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <span>Results NOT submitted.</span>\n            </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='submit' onClick={this.closeDialog} color=\"default\">\n                            OK\n            </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.editTime}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Edit Time:</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <div>Please enter the new time and hit Submit</div>\n                            <div style={{marginTop: \"10px\"}}>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"min\" value={this.state.editTimeMin} onChange={this.handleChange('editTimeMin')}/></span>\n                                    <span style={{paddingLeft: '5px', paddingRight: '5px', fontSize: \"18px\", fontWeight: \"bold\"}}>:</span>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"sec\" value={this.state.editTimeSec} onChange={this.handleChange('editTimeSec')}/></span>\n                                    <span style={{paddingLeft: '5px', paddingRight: '5px', fontSize: \"18px\", fontWeight: \"bold\"}}>:</span>\n                                    <span><input style={{width: '50px'}} className='skillInput' type=\"number\" placeholder=\"ms\" value={this.state.editTimeMS} onChange={this.handleChange('editTimeMS')}/></span>\n                                </div>\n            </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button type='submit' onClick={e=> this.submitNewTime()} color=\"default\">\n                            Submit\n            </Button>\n            <Button type='submit' onClick={this.closeDialog} color=\"default\">\n                            Cancel\n            </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.state.openFinalDialog}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Are you sure you want to submit these results?</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            \n            </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button type='submit' onClick={e => this.finalizeResults()} color=\"primary\">\n                            Submit\n            </Button>\n                        <Button type='submit' onClick={this.closeDialog} color=\"default\">\n                            Cancel\n            </Button>\n                    </DialogActions>\n                </Dialog>\n    </div>;\n    }\n  }\n  \n  export default ResultsEntry;","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Dialog\");","module.exports = require(\"@material-ui/core/DialogActions\");","module.exports = require(\"@material-ui/core/DialogContent\");","module.exports = require(\"@material-ui/core/DialogContentText\");","module.exports = require(\"@material-ui/core/DialogTitle\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/FormLabel\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Radio\");","module.exports = require(\"@material-ui/core/RadioGroup\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"axios\");","module.exports = require(\"core-js/library/fn/date/now\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"http\");","module.exports = require(\"react\");","module.exports = require(\"regenerator-runtime\");","module.exports = require(\"simple-flexbox\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAQA;AACA;AACA;AAHA;AAoBA;;;;AAhDA;AACA;AADA;AAWA;AACA;AAFA;AACA;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;;;;AAtBA;AACA;AADA;AAQA;AACA;AAFA;AACA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAOA;;;;AArCA;AACA;AADA;AAOA;AADA;AACA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;;;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;AAtGA;AACA;AAwGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/HA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAMA;AAAA;AAGA;AACA;AAAA;AAIA;;;;AAlBA;AACA;AADA;AAOA;AADA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAdA;AACA;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;ACvpBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AACA;AAkCA;AAAA;AACA;AAGA;AAJA;AACA;AAmOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAxOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AACA;AADA;AAWA;AAXA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;AADA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAHA;AAKA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAKA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAKA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAMA;;;;AA/fA;AACA;AAigBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3hBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}